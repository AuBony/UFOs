###################
#Analyse textuelle#
###################

## Chargement du jeu de données
data <- read.csv("C:/Users/axels/OneDrive/Documents/Institut Agro/Agrocampus Ouest/UFOs/archive/scrubbed.csv", header = T)
mydata <- data[1:500,] #Echantillon avec les 500 premières lignes pour la rapidité d'exécution

## Appel des packages nécessaires
library("tm") # Text mining
library("wordcloud") # Représentation du nuage de mots
library("SnowballC") # Racinisation des mots (on prend leur radical)
library("RColorBrewer") # Pour les couleurs

## Chargement du texte de la colonne commentaires
texte <- Corpus(VectorSource(mydata$comments)) #VectorSource créé un ensemble de vecteurs de textes
inspect(texte) #Observer le corpus de textes (les vecteurs de textes)


## Nettoyage du texte

toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x)) # Caractères spéciaux en espace
texte <- tm_map(texte, toSpace, "/")
texte <- tm_map(texte, toSpace, "@")
texte <- tm_map(texte, toSpace, "\\|")


texte <- tm_map(texte, content_transformer(tolower)) # Texte en minuscule
texte <- tm_map(texte, removeNumbers) # Supprimer les nombres
texte <- tm_map(texte, removeWords, stopwords("english")) # Supprimer les mots vides
texte <- tm_map(texte, removeWords, c("mot1", "mot2")) # Supprimer des mots à définir
texte <- tm_map(texte, removePunctuation) # Supprimer la  ponctuation
texte <- tm_map(texte, stripWhitespace) # Supprimer les espaces vides supplémentaires

texte <- tm_map(texte, stemDocument) # Réduit les mots à leur racine (Text stemming)


## Matrice des mots (term-documents matrix), donne leur nombre d'occurence
dtm <- TermDocumentMatrix(texte)
m <- as.matrix(dtm) # Transforme en matrice
v <- sort(rowSums(m),decreasing=TRUE) # Trier par ordre décroissant
Tableau <- data.frame(word = names(v),freq=v) # Transforme en data frame
head(Tableau, 10) # 10 mots les plus employés


## Nuage de mots
set.seed(1234)
wordcloud(words = Tableau$word, freq = Tableau$freq, min.freq = 20,
          max.words=200, random.order=FALSE, rot.per=0, 
          colors=brewer.pal(8, "Dark2"))
# Version pour fichier lourd
wordcloud(texte, max.words = 20, colors = brewer.pal(8, "Dark2"),  rot.per=0)

wordcloud(texte, min.freq = 2, scale = c(4, 0.5), random.order = FALSE, 
          random.color = TRUE, rot.per = 0.1, colors = brewer.pal(8, "Dark2"))


## Diagramme de la fréquence des mots
barplot(Tableau[1:10,]$freq, las = 2, names.arg = Tableau[1:10,]$word,
        col ="green", main ="Mots les plus utilisés",
        ylab = "Nombre d'apparition du mot")

# Source : http://www.sthda.com/french/wiki/text-mining-et-nuage-de-mots-avec-le-logiciel-r-5-etapes-simples-a-savoir#etape-1-creez-un-fichier-texte



